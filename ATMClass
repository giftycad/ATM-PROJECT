import sys, os, time, re
from datetime import datetime
from decimal import Decimal

#ATM Class

class ATM():

 
    def __init__(self, username, avail_amount):
        self.username = username
        self.avail_amount = avail_amount

    def check_balance(self):
        print("Your Account balance is GH {} cedis ".format(self.avail_amount))

    def print_receipt(self, transaction_type, amount, balance):
        #ask = input(
        #"Do you want a receipt printed for this transaction? Y/N: ")
        active = True
        while active:
            ask = (input(
        "Do you want a receipt printed for this transaction? Y/N: ")).upper()
            if ask == "Y":
                print("Receipt printed for {} of {}. \n Your available balance is {}.".format(
                transaction_type, amount, balance))
                active = False
            elif ask == "N":
                print("Receipt not printed ")
                active = False
            else:
                print("Please try again")
    
    def withdraw(self, withdrawal_amount):
        
        if (self.avail_amount <= withdrawal_amount):
            print("Insufficient funds..")
        else:
            self.avail_amount = self.avail_amount - withdrawal_amount
            #print("Your Account balance is GH {} gh cedis ".format(self.avail_amount))
            print("Your updated Account balance is GH {} cedis ".format(self.avail_amount))
            now = datetime.now()
            current_time = "%s:%s %s / %s / %s" % (
            now.hour, now.minute, now.month, now.day, now.year)
            history_file = open(self.username + 'history.txt', 'a')
            history_file.write(current_time + '\n')
            history_file.write(str(withdrawal_amount) + '\n')
            history_file.close()
            #return replace_file(account, file)
        self.print_receipt(transaction_type="withdrawal",
                  amount=withdrawal_amount, balance=self.avail_amount)
    
    def deposit(self, deposited_amount):
        self.avail_amount = self.avail_amount + deposited_amount
        print("You have deposited GH {} cedis in your Account.\nYour updated Account balance is {} ".format(
        deposited_amount, self.avail_amount))
        self.print_receipt(transaction_type="deposit",
                  amount=deposited_amount, balance=self.avail_amount)
    def print_transaction(self):
           transactions = open(self.username + 'history.txt', 'r')
           allTransactions = transactions.readlines()
           transactions.close()
           if len(allTransactions) == 0:
               print("No transactions yet")
           else:
               print("Transactions:")
           for tran in range(len(allTransactions)):
               sys.stdout.write(allTransactions[tran])

    def pin_change(self, user_pin):
        i=2
        while(i>0):
            p=int(input('Enter Original PIN: '))
            if p==user_pin:
                x=input('Enter New PIN: ')
                user_pin=x
                break
            else:
                i=i-1
                print('PIN incorrect, {} tries left'.format(i))
        if i==0:
            del self.username
            print('Account Blocked!')
    
